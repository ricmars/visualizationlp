@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
  --chevron-width: 32px;
  --stage-height: 64px;
  --stage-min-width: 200px;
  --animation-duration: 500ms;
  /* Spacing tokens */
  --Spacing-1x: 7px;
  --Spacing-2x: 14px;
  /* App layout */
  --panel-gutter: 24px; /* Space between left/main and main/right panels */

  /* Stage Colors - Updated for better contrast */
  --stage-intake: #0a4b9f; /* Darker blue for better contrast */
  --stage-compliance: #0d5ab9; /* Adjusted blue */
  --stage-risk: #0967d2; /* Brighter blue */
  --stage-investigation: #0b5ed7; /* Vivid blue */
  --stage-closure: #166534; /* Darker green for better contrast */

  /* Theme variables */
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);

  /* Modal tokens */
  --color-modal-bg: #283b67;
  --color-modal-text: #ffffff;

  /* App header tokens */
  --header-height: 49px;
  --color-header-bg: #000000;

  /* Input tokens */
  --input-fg: #ffffff;
  --input-bg: #181d2a;
  --input-border-color: rgba(245, 248, 249, 0.4);
  --input-radius: var(--Input-radius-Medium, 4px);
  --input-height: 32px;
  --input-padding: 0 4px 0 8px;

  /* Interactive color tokens */
  --color-interactive: #75d7cd;
  --color-interactive-hover: #8be4da;
  --color-interactive-active: #68cfc4;
}

/* Tailwind v4 theme tokens mapped to CSS variables */
@theme {
  --color-modal: var(--color-modal-bg);
  --color-modal-text: var(--color-modal-text);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ffffff;
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

/* Force dark variables whenever .dark is on the root */
.dark body {
  --background: #0a0a0a;
  --foreground: #ffffff;
  --foreground-rgb: 255, 255, 255;
  --background-start-rgb: 0, 0, 0;
  --background-end-rgb: 0, 0, 0;
}

html,
body {
  height: 100%;
}

body {
  background-color: var(--background);
  background-image: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)),
    url("/lp-background.png");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-attachment: fixed;
  color: var(--foreground);
  font-family: "Montserrat", ui-sans-serif, system-ui, -apple-system, Segoe UI,
    Roboto, Noto Sans, Ubuntu, Cantarell, Helvetica Neue, Arial,
    "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", sans-serif;
  padding-top: var(--header-height);
}

@layer components {
  /* Semantic utility for modal surfaces */
  .modal-surface {
    @apply bg-modal text-modal-text min-w-[450px];
  }

  /* App panels horizontal gutter */
  .app-panels {
    gap: var(--panel-gutter);
  }

  /* Unified modal backdrop: subtle 20% opacity with slight blur */
  .modal-backdrop {
    @apply bg-black/20 backdrop-blur-[2px];
  }

  /* Launchpad input style */
  .lp-input {
    color: var(--input-fg);
    background-color: var(--input-bg);
    border-radius: var(--input-radius);
    border: 1px solid var(--input-border-color);
    height: var(--input-height);
    padding: var(--input-padding);
    outline: none;
  }
  .lp-input:focus {
    border-color: #8ab4ff; /* subtle focus ring */
    box-shadow: 0 0 0 1px #8ab4ff33;
  }

  /* Textareas should not be constrained by fixed input height */
  textarea.lp-input {
    height: auto;
  }

  /* Interactive button style */
  .interactive-button {
    border-radius: 6px;
    border: 1px solid #75d7cd;
    background: #75d7cd;
    color: #0b132b;
    padding: var(--Spacing-1x, 7px) var(--Spacing-2x, 14px);
    height: 32px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
    transition: background-color 120ms ease, box-shadow 120ms ease,
      border-color 120ms ease, color 120ms ease, transform 80ms ease;
  }
  .interactive-button:hover {
    background: #8be4da;
    box-shadow: 0 0 0 2px rgba(117, 215, 205, 0.25) inset;
  }
  .interactive-button:focus-visible {
    outline: none;
    box-shadow: 0 0 0 2px rgba(117, 215, 205, 0.5);
  }
  .interactive-button:active {
    transform: translateY(0.5px);
    background: #68cfc4;
  }
  .interactive-button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  /* Secondary button style */
  .btn-secondary {
    border-radius: 6px;
    border: 1px solid #75d7cd;
    background: rgba(21, 17, 44, 0.5);
    height: 32px;
    padding: var(--Spacing-1x) 0;
    color: #75d7cd;
    min-width: 32px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
    transition: background-color 120ms ease, box-shadow 120ms ease,
      border-color 120ms ease, color 120ms ease;
  }
  .btn-secondary:hover {
    background: rgba(21, 17, 44, 0.65);
    box-shadow: 0 0 0 2px rgba(117, 215, 205, 0.25) inset;
  }
  .btn-secondary:focus-visible {
    outline: none;
    box-shadow: 0 0 0 2px rgba(117, 215, 205, 0.5);
  }
  .btn-secondary:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  /* Consistent modal/overlay header with bottom border */
  .lp-modal-header {
    @apply flex items-center justify-between pb-4 border-b border-gray-200 dark:border-gray-700;
  }

  /* Interactive text utility */
  .text-interactive {
    color: var(--color-interactive);
  }

  /* Toggle (Preview switch) */
  .lp-toggle {
    position: relative;
  }
  .lp-toggle-track {
    @apply block w-14 h-8 rounded-full transition-colors duration-200 ease-in-out;
    background-color: rgb(229 231 235); /* gray-200 */
    border: 1px solid var(--color-interactive);
  }
  .dark .lp-toggle-track {
    background-color: rgb(55 65 81); /* gray-700 */
  }
  /* Focus ring using interactive color */
  .lp-toggle input[type="checkbox"]:focus + .lp-toggle-track {
    box-shadow: 0 0 0 2px rgba(117, 215, 205, 0.5);
  }
  /* Checked state uses interactive color */
  .lp-toggle input[type="checkbox"]:checked + .lp-toggle-track {
    background-color: var(--color-interactive);
  }
  .lp-toggle-dot {
    @apply absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition-all duration-200 ease-in-out shadow-sm;
  }
  /* Move the dot when checked */
  .lp-toggle
    input[type="checkbox"]:checked
    + .lp-toggle-track
    + .lp-toggle-dot {
    transform: translateX(24px);
  }
}

.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
}

.modal-content {
  background: white;
  padding: 24px;
  border-radius: 12px;
  width: 500px; /* Increased width for better layout */
  max-width: 90%; /* Ensure responsiveness */
  text-align: center;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Enhanced shadow for better visibility */
}

.modal-content h2 {
  font-size: 1.5rem;
  margin-bottom: 1rem;
  color: var(--foreground); /* Ensure text is readable */
}

.modal-content p {
  font-size: 1rem;
  margin-bottom: 1.5rem;
  color: var(--foreground); /* Ensure text is readable */
}

.modal-content .button {
  display: inline-block;
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
  font-weight: bold;
  color: white;
  background-color: var(--stage-intake); /* Use a stage color for buttons */
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.modal-content .button:hover {
  background-color: var(
    --stage-compliance
  ); /* Slightly different color on hover */
}

.modal-content .button:disabled {
  background-color: #cccccc; /* Disabled state */
  cursor: not-allowed;
}

.modal-content .button + .button {
  margin-left: 1rem; /* Space between buttons */
}

.clip-path-chevron {
  position: relative;
  margin-right: calc(var(--chevron-width) * -1);
  clip-path: polygon(
    0 0,
    calc(100% - var(--chevron-width)) 0,
    100% 50%,
    calc(100% - var(--chevron-width)) 100%,
    0 100%,
    var(--chevron-width) 50%
  );
}

.clip-path-chevron::after {
  content: "";
  position: absolute;
  top: 2px;
  right: 2px;
  bottom: 2px;
  left: 2px;
  background: inherit;
  opacity: 0.7;
  clip-path: inherit;
}

.clip-path-chevron:first-child {
  margin-left: 0;
  clip-path: polygon(
    0 0,
    calc(100% - var(--chevron-width)) 0,
    100% 50%,
    calc(100% - var(--chevron-width)) 100%,
    0 100%
  );
}

.clip-path-chevron:last-child {
  margin-right: 0;
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%, var(--chevron-width) 50%);
}

/* Stage-specific styles */
.stage-completed {
  background: var(--stage-closure);
  box-shadow: 0 4px 6px -1px rgba(46, 125, 50, 0.1),
    0 2px 4px -1px rgba(46, 125, 50, 0.06);
}

.stage-active {
  background: var(--stage-intake);
  box-shadow: 0 4px 6px -1px rgba(13, 71, 161, 0.1),
    0 2px 4px -1px rgba(13, 71, 161, 0.06);
}

.stage-pending {
  background: var(--stage-compliance);
  box-shadow: 0 4px 6px -1px rgba(25, 118, 210, 0.1),
    0 2px 4px -1px rgba(25, 118, 210, 0.06);
}

/* Stage position-specific colors */
.stage-1 {
  background: var(--stage-intake);
}
.stage-2 {
  background: var(--stage-compliance);
}
.stage-3 {
  background: var(--stage-risk);
}
.stage-4 {
  background: var(--stage-investigation);
}
.stage-5 {
  background: var(--stage-closure);
}

/* Animation keyframes */
@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateX(100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideOut {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(-100%);
  }
}

@keyframes moveUp {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-100%);
  }
}

@keyframes moveDown {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(100%);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.95);
  }
}

.animate-slide-in {
  animation: slideIn var(--animation-duration) ease-out forwards;
}

.animate-slide-out {
  animation: slideOut var(--animation-duration) ease-in forwards;
}

.animate-move-up {
  animation: moveUp var(--animation-duration) ease-in-out forwards;
}

.animate-move-down {
  animation: moveDown var(--animation-duration) ease-in-out forwards;
}

.animate-fade-in {
  animation: fadeIn var(--animation-duration) ease-out forwards;
}

.animate-fade-out {
  animation: fadeOut var(--animation-duration) ease-in forwards;
}

.workflow-container {
  padding: 2rem;
  background: linear-gradient(
    to bottom,
    rgba(249, 250, 251, 0.8),
    rgba(249, 250, 251, 0.4)
  );
  backdrop-filter: blur(8px);
  border-radius: 1rem;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

.dark .workflow-container {
  background: linear-gradient(
    to bottom,
    rgba(17, 24, 39, 0.8),
    rgba(17, 24, 39, 0.4)
  );
}

/* Text shadow for better contrast on colored backgrounds */
.text-shadow {
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
}

/* Toggle Switch */
.dot {
  transition-property: transform;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

/* Global application header */
.app-header {
  height: var(--header-height);
  width: 100%;
  background-color: var(--color-header-bg);
  position: fixed;
  top: 0;
  left: 0;
  z-index: 50;
}

.app-header-content {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 12px;
}

.app-header-left,
.app-header-right {
  display: flex;
  align-items: center;
  gap: 12px;
}

/* Specific sizing for header assets */
.app-header img.logo {
  display: block;
  width: 90px;
  height: 13px;
}

.app-header img.icon {
  display: block;
  width: 16px;
  height: 16px;
}

/* App-aware viewport height utilities */
.h-app-screen {
  height: calc(100vh - var(--header-height));
}

.min-h-app-screen {
  min-height: calc(100vh - var(--header-height));
}
